import arcade
import random

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600

COLORS = [arcade.color.BLUE, arcade.color.FANDANGO_PINK,
         arcade.color.FRENCH_ROSE, arcade.color.GOLDEN_POPPY]

class Balle():
   def __init__(self, parameter1 , parameter2, parameter3, parameter4):
       self.rayon = parameter1
       self.center_x = parameter2
       self.center_y = parameter3
       self.color = parameter4
       self.change_x = random.randint(1,50)
       self.change_y = random.randint(1,50)


   def draw(self):
       arcade.draw_circle_filled(self.center_x, self.center_y, self.rayon, self.color)
   def update(self):
       self.center_x += self.change_x
       self.center_y += self.change_y
       if self.center_y > SCREEN_HEIGHT:
           self.change_y *= -1
       if self.center_y < 0:
           self.change_y *= -1
       if self.center_x > SCREEN_WIDTH:
           self.change_x *= -1
       if self.center_x < 0:
           self.change_x *= -1


class Rectangle():
    def __init__(self, parameter1, parameter2, parameter3, parameter4, parameter5):
        self.width= parameter1
        self.center_x = parameter2
        self.center_y = parameter3
        self.color = parameter4
        self.height = parameter5
        self.change_x = random.randint(1,50)
        self.change_y = random.randint(1,50)

    def draw(self):
        arcade.draw_rectangle_filled(self.center_x, self.center_y, self.width, self.height, self.color, 0)

    def update(self):
        self.center_x += self.change_x
        self.center_y += self.change_y
        if self.center_y > SCREEN_HEIGHT:
            self.change_y *= -1
        if self.center_y < 0:
            self.change_y *= -1
        if self.center_x > SCREEN_WIDTH:
            self.change_x *= -1
        if self.center_x < 0:
            self.change_x *= -1


class MyGame(arcade.Window):
   def __init__(self):
       super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, "Exercice #1")
       self.liste_cercles = []
       self.liste_rectangle = []

   def setup(self):
        arcade.set_background_color(arcade.color.BLACK)
        arcade.schedule(self.update, 1/60)
   def on_draw(self):
       arcade.start_render()
       for cercle in self.liste_cercles:
           cercle.draw()
       for rectangle in self.liste_rectangle:
           rectangle.draw()

   def on_mouse_press(self, x: int, y: int, button: int, modifiers: int):
        if button == arcade.MOUSE_BUTTON_LEFT:
            rayon = random.randint(5, 10)
            center_x = x
            center_y = y
            color = random.choice(COLORS)
            variable = Balle(rayon, center_x, center_y, color)

            self.liste_cercles.append(variable)

        if button == arcade.MOUSE_BUTTON_RIGHT:
            width = 11
            height = 11
            center_x = x
            center_y = y
            color = random.choice(COLORS)
            variableR = Rectangle(width, center_x, center_y, color, height,)

            self.liste_rectangle.append(variableR)

   def on_update(self, delta_time: float):
       for cercle in self.liste_cercles:
           cercle.update()
       for rect in self.liste_rectangle:
           rect.update()





def main():
    my_game = MyGame()
    my_game.setup()
    arcade.run()

main()
